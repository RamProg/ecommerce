[{"G:\\My Drive\\ESTUDIOS\\Coder\\ecommerce\\src\\index.js":"1","E:\\ESTUDIOS\\coder\\ecommerce\\src\\index.js":"2","E:\\ESTUDIOS\\coder\\ecommerce\\src\\App.js":"3","E:\\ESTUDIOS\\coder\\ecommerce\\src\\reportWebVitals.js":"4","E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\cartContext.js":"5","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\CartContainer\\CartContainer.js":"6","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\Error\\Error.js":"7","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemListContainer\\ItemListContainer.js":"8","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemDetailContainer\\ItemDetailContainer.js":"9","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\CartContainer\\Cart\\Cart.js":"10","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemListContainer\\ItemList\\ItemList.js":"11","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemDetailContainer\\ItemDetails\\ItemDetails.js":"12","E:\\ESTUDIOS\\coder\\ecommerce\\src\\firebase\\index.js":"13","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemDetailContainer\\ItemDetails\\ItemCount\\ItemCount.js":"14","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemListContainer\\ItemList\\Item\\Item.js":"15","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\LoginContainer\\LoginContainer.js":"16","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\SignupContainer\\SignupContainer.js":"17","E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\userContext.js":"18","E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\CartContext.js":"19","E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\UserContext.js":"20","E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\WishListContext.js":"21","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemDetailContainer\\ItemDetails\\CustomItem\\CustomItem.js":"22","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\CartContainer\\Cart\\OrderDisplay\\OrderDisplay.js":"23","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\OrderContainer\\OrderContainer.js":"24","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\OrderContainer\\InputOrder\\InputOrder.js":"25","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\NavBarContainer.js":"26","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\CartWidget\\CartWidget.js":"27","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\WishListWidget\\WishListModal\\WishListModal.js":"28","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\WishListWidget\\WishListWidget.js":"29","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\CartWidget\\CartModal\\CartModal.js":"30","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\NavBar\\NavBar.js":"31"},{"size":500,"mtime":1609812483306,"results":"32","hashOfConfig":"33"},{"size":517,"mtime":1613322648346,"results":"34","hashOfConfig":"35"},{"size":2862,"mtime":1614217296433,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1613322648346,"results":"37","hashOfConfig":"35"},{"size":1340,"mtime":1613605777587,"results":"38","hashOfConfig":"35"},{"size":6444,"mtime":1614173658638,"results":"39","hashOfConfig":"35"},{"size":186,"mtime":1613322648338,"results":"40","hashOfConfig":"35"},{"size":2277,"mtime":1614220415396,"results":"41","hashOfConfig":"35"},{"size":3193,"mtime":1614219849644,"results":"42","hashOfConfig":"35"},{"size":2162,"mtime":1614173701749,"results":"43","hashOfConfig":"35"},{"size":701,"mtime":1614221052041,"results":"44","hashOfConfig":"35"},{"size":2285,"mtime":1614219738693,"results":"45","hashOfConfig":"35"},{"size":845,"mtime":1613587763992,"results":"46","hashOfConfig":"35"},{"size":1368,"mtime":1613407501415,"results":"47","hashOfConfig":"35"},{"size":729,"mtime":1613322648340,"results":"48","hashOfConfig":"35"},{"size":1420,"mtime":1614220611820,"results":"49","hashOfConfig":"35"},{"size":2202,"mtime":1614129631734,"results":"50","hashOfConfig":"35"},{"size":321,"mtime":1613605780176,"results":"51","hashOfConfig":"35"},{"size":2458,"mtime":1614131364720,"results":"52","hashOfConfig":"35"},{"size":331,"mtime":1614129631734,"results":"53","hashOfConfig":"35"},{"size":1911,"mtime":1613696566537,"results":"54","hashOfConfig":"35"},{"size":776,"mtime":1613694160452,"results":"55","hashOfConfig":"35"},{"size":694,"mtime":1614178782874,"results":"56","hashOfConfig":"35"},{"size":2207,"mtime":1614215963646,"results":"57","hashOfConfig":"35"},{"size":360,"mtime":1614177283014,"results":"58","hashOfConfig":"35"},{"size":2245,"mtime":1614220956958,"results":"59","hashOfConfig":"35"},{"size":584,"mtime":1613614613027,"results":"60","hashOfConfig":"35"},{"size":2890,"mtime":1613696762468,"results":"61","hashOfConfig":"35"},{"size":628,"mtime":1613615661217,"results":"62","hashOfConfig":"35"},{"size":2379,"mtime":1613696157989,"results":"63","hashOfConfig":"35"},{"size":2633,"mtime":1614220980329,"results":"64","hashOfConfig":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"okt0w1",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1pft0u7",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\My Drive\\ESTUDIOS\\Coder\\ecommerce\\src\\index.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\index.js",[],["133","134"],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\App.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\reportWebVitals.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\cartContext.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\CartContainer\\CartContainer.js",["135"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport { Context } from '../../context/CartContext'\r\nimport { getFirestore } from '../../firebase'\r\nimport firebase from 'firebase/app'\r\nimport '@firebase/firestore'\r\nimport { Cart } from './Cart/Cart'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport 'firebase/auth'\r\nimport { useFirebaseApp } from 'reactfire'\r\n\r\nexport const CartContainer = () => {\r\n    const _firebase = useFirebaseApp();\r\n\r\n    const { cart, removeItem, clear } = useContext(Context)\r\n    const [orderNumber, setOrderNumber] = useState(null)\r\n    const [ableFinish, setAbleFinish] = useState(\"disabled\")\r\n    const { auth } = useContext(UserContext);\r\n\r\n    const mail = _firebase.auth().currentUser.email\r\n\r\n    const [ClientData, setClientData] = useState({ mail })\r\n\r\n    const CREATED = \"generada\"\r\n\r\n    function updateData(id, data) {\r\n        if (!data) setAbleFinish(\"disabled\")\r\n        setClientData({ ...ClientData, [id]: data })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ClientData.name && ClientData.phone && ClientData.mail) setAbleFinish(\"\")\r\n    }, [ClientData])\r\n\r\n    function getKey(id, selectedOption = null) {\r\n        let value = id\r\n        if (selectedOption) value += selectedOption\r\n        return value\r\n    }\r\n\r\n    function getTotal() {\r\n        let total = 0\r\n        cart.forEach(e => total += e.item.price * e.quantity)\r\n        return total\r\n    }\r\n\r\n    function getItems() {\r\n        return cart.map(e => ({\r\n            id: e.item.id,\r\n            title: e.item.title,\r\n            quantity: e.quantity,\r\n            price: e.item.price\r\n        }))\r\n    }\r\n    function getQuantity() {\r\n        let total = 0\r\n        cart.forEach(e => total += e.quantity)\r\n        return total\r\n    }\r\n\r\n    function updateStock(db, order) {\r\n        const items = db.collection(\"items\")\r\n        order.items.forEach(e => {\r\n            let _item = items.doc(e.id)\r\n            _item.get()\r\n                .then((doc) => {\r\n                    let oldStock = doc.data().stock\r\n                    _item.update({\r\n                        stock: oldStock - e.quantity\r\n                    })\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"There has been an error \", err)\r\n                }).finally(() => {\r\n\r\n                })\r\n        })\r\n    }\r\n\r\n    function validateName(name) {\r\n        let flag = false\r\n        if (name && name.length && !/\\d/.test(name)) flag = true\r\n        else alert(\"You must enter your full name to place an order. Only letters are allowed\")\r\n        return flag\r\n    }\r\n\r\n    function validatePhone(phone) {\r\n        let flag = false\r\n        if (phone && phone.length && /^\\d+$/.test(phone)) flag = true\r\n        else alert(\"You must enter your phone to place an order. Only numbers are allowed.\")\r\n        return flag\r\n    }\r\n    function validateMail(mail) {\r\n        let flag = false\r\n        if (mail && mail.length && mail.includes('@')) flag = true\r\n        else alert(\"You must enter a valid email.\")\r\n        return flag\r\n    }\r\n\r\n    async function validateOneStock(i, items) {\r\n        return new Promise((resolve, reject) => {\r\n            let doc = items.doc(i.id)\r\n            doc.get()\r\n                .then((e) => {\r\n                    let stock = e.data().stock\r\n                    if (!(stock >= i.quantity)) {\r\n                        resolve(false)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    reject(error)\r\n                })\r\n                .finally(() => {\r\n                    resolve(true)\r\n                })\r\n        })\r\n\r\n    }\r\n\r\n    async function validateStock(db, itemsOnCart) {\r\n        const items = db.collection(\"items\")\r\n        for (let i of itemsOnCart) {\r\n            const answer = await validateOneStock(i, items)\r\n            if (!answer) return false\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n\r\n    async function createOrder(e) {\r\n        e.preventDefault()\r\n        if (!validateName(ClientData.name) || !validatePhone(ClientData.phone) || !validateMail(ClientData.mail)) {\r\n            // do not create the order if some data is not validated\r\n        } else {\r\n            const items = getItems()\r\n            //create the order\r\n            setOrderNumber('loading')\r\n            const order = {\r\n                buyer: ClientData,\r\n                items,\r\n                date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n                quantity: getQuantity(),\r\n                total: getTotal(),\r\n                status: CREATED,\r\n            }\r\n            const db = getFirestore()\r\n            const batch = db.batch()\r\n\r\n            // validate the stock\r\n            const stockIsAvailable = await validateStock(db, items)\r\n            console.log(\"desde createORder\", stockIsAvailable)\r\n            if (!stockIsAvailable) alert(\"We are sorry, there is not enough available stock for your purchase\")\r\n            else {\r\n                const newElement = db.collection(\"orders\").doc()\r\n                batch.set(newElement, order)\r\n                batch.commit()\r\n                    .then(() => {\r\n                        const orderId = newElement.id\r\n                        console.log(orderId)\r\n                        updateStock(db, order)\r\n                        setOrderNumber(orderId)\r\n                    }).catch(err => {\r\n                        console.log(\"There has been an error \", err)\r\n                        setOrderNumber(null)\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function handleDelete(id, selectedOption = null) {\r\n        removeItem(id, selectedOption)\r\n    }\r\n\r\n    function handleClear() {\r\n        clear()\r\n    }\r\n\r\n    function totalPrice() {\r\n        let price = 0\r\n        cart.forEach(e => price += e.item.price * e.quantity);\r\n        return price\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {auth ?\r\n                <Cart handleDelete={handleDelete} handleClear={handleClear} totalPrice={getTotal}\r\n                    createOrder={createOrder} updateData={updateData} orderNumber={orderNumber}\r\n                    ableFinish={ableFinish} mail={mail} getKey={getKey}/>\r\n                :\r\n                <Redirect to={{ pathname: '/' }} />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\Error\\Error.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemListContainer\\ItemListContainer.js",["136"],"import React, { useState, useEffect } from 'react'\r\nimport { ItemList } from './ItemList/ItemList'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport './ItemListContainer.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getFirestore } from '../../firebase'\r\n\r\nexport const ItemListContainer = ({ greeting }) => {\r\n\r\n    let { categoryKey } = useParams(null)\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [products, setProducts] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    const getHandler = (itemsCollection) => {\r\n        itemsCollection.limit(3).get()\r\n            .then((querySnapshot) => {\r\n                if (querySnapshot.size === 0) {\r\n                    console.log(\"coleccion vacia\")\r\n                }\r\n                setProducts(querySnapshot.docs.map(doc => {\r\n                    return ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    })\r\n                })\r\n                )\r\n            }).catch(error => console.log(\"error searching documents \", error))\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        const db = getFirestore()\r\n        let itemsCollection = db.collection(\"items\")\r\n        const categoriesCollection = db.collection(\"categories\")\r\n        console.log(categoryKey)\r\n        if (categoryKey) {\r\n            console.log(\"hay categorieKEy\")\r\n            categoriesCollection.where('key', '==', categoryKey).get()\r\n                .then(response => {\r\n                    console.log(\"hay response\")\r\n                    console.log(response)\r\n                    console.log(response.docs)\r\n                    let categoryId = response.docs[0].id\r\n                    itemsCollection = db.collection(\"items\").where('category', '==', categoryId)\r\n                    setTitle(response.docs[0].data().name)\r\n                    getHandler(itemsCollection)\r\n                })\r\n                .catch(error => console.log(\"error en categorias \", error))\r\n        } else {\r\n            getHandler(itemsCollection)\r\n        }\r\n    }, [categoryKey])\r\n\r\n    return (\r\n\r\n        <ItemList items={products} categoryKey={categoryKey} title={title} loading={loading}/>\r\n\r\n    )\r\n}","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemDetailContainer\\ItemDetailContainer.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\CartContainer\\Cart\\Cart.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemListContainer\\ItemList\\ItemList.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemDetailContainer\\ItemDetails\\ItemDetails.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\firebase\\index.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemDetailContainer\\ItemDetails\\ItemCount\\ItemCount.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemListContainer\\ItemList\\Item\\Item.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\LoginContainer\\LoginContainer.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\SignupContainer\\SignupContainer.js",["137","138"],"import React, { useState, useContext } from 'react'\r\nimport 'firebase/auth'\r\nimport { useFirebaseApp } from 'reactfire'\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport const SignupContainer = () => {\r\n    const firebase = useFirebaseApp();\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const { auth, setAuth } = useContext(UserContext);\r\n    var currentUser = firebase.auth().currentUser;\r\n\r\n    const submit = () => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                let user = firebase.auth().currentUser;\r\n                user.updateProfile({\r\n                    displayName: name,\r\n                }).then(function () {\r\n                    console.log(\"nombre es\", firebase.auth().currentUser.displayName)\r\n                    setAuth(true)\r\n                }).catch(function (error) {\r\n                    console.log(\"an error happened setting the name\", error.code, error.message)\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                alert(error.code, error.message)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    const logout = async () => {\r\n        console.log(\"loging out \")\r\n        await firebase.auth().signOut()\r\n        setAuth(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            {auth ?\r\n                <Redirect to={{ pathname: '/' }} />\r\n                :\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input onChange={e => setName(e.target.value)} type=\"name\" id=\"name\" /><br />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input onChange={e => setEmail(e.target.value)} type=\"email\" id=\"email\" /><br />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input onChange={e => setPassword(e.target.value)} type=\"password\" id=\"password\" /><br />\r\n                    <button onClick={submit}>Signup</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\userContext.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\CartContext.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\UserContext.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\context\\WishListContext.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\ItemDetailContainer\\ItemDetails\\CustomItem\\CustomItem.js",["139","140"],"import React, { useState, useEffect } from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport const CustomItem = ({ options, handleOptionSelected }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form className=\"container\">\r\n                <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                    <Form.Control onChange={o => handleOptionSelected(o.target.value)} as=\"select\" custom>\r\n                        <option selected=\"true\" disabled=\"disabled\">Select a variant</option>\r\n                        {options.map(e => {\r\n                           return <option>{e}</option>\r\n                        })}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\CartContainer\\Cart\\OrderDisplay\\OrderDisplay.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\OrderContainer\\OrderContainer.js",["141"],"import React, { useState } from 'react'\r\nimport './OrderContainer.css'\r\nimport { OrderDisplay } from '../CartContainer/Cart/OrderDisplay/OrderDisplay'\r\nimport { InputOrder } from './InputOrder/InputOrder'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { getFirestore } from '../../firebase'\r\n\r\nexport const OrderContainer = ({ }) => {\r\n\r\n    const [orderId, setOrderId] = useState(null)\r\n    const [order, setOrder] = useState(null)\r\n    const [loadingOrder, setLoadingOrder] = useState(false)\r\n    const [wrongOrderIdFlag, setWrongOrderIdFlag] = useState(false)\r\n\r\n\r\n    function handleInput(id) {\r\n        setOrderId(id)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoadingOrder(true)\r\n        orderId ? loadNewOrder(orderId)\r\n            :\r\n            alert(\"You must enter an Order Id\")\r\n        setLoadingOrder(false)\r\n    }\r\n\r\n    function loadNewOrder(orderId) {\r\n        const db = getFirestore()\r\n        const orders = db.collection(\"orders\")\r\n        const orderDoc = orders.doc(orderId.toString())\r\n        console.log(\"el id de order es\", orderId.toString())\r\n        orderDoc.get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    setWrongOrderIdFlag(false)\r\n                    const itemsRaw = doc.data().items\r\n                    const items = []\r\n                    itemsRaw.forEach(e => {\r\n                        items.push({ item: e, quantity: e.quantity })\r\n                    });\r\n                    setOrder(items)\r\n                } else {\r\n                    setOrder(null)\r\n                    setWrongOrderIdFlag(true)\r\n                    return;\r\n                }\r\n            }).catch(error => console.log(\"error searching order \", error))\r\n    }\r\n\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div>Enter your order number:</div>\r\n            <InputOrder handleInput={handleInput} handleSubmit={handleSubmit} />\r\n            { loadingOrder && <Spinner animation=\"border\" variant=\"info\" />}\r\n            { order && <div><OrderDisplay order={order} /></div>}\r\n            { wrongOrderIdFlag && <div>The order number you entered is not valid</div>}\r\n        </div>\r\n    )\r\n}","E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\OrderContainer\\InputOrder\\InputOrder.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\NavBarContainer.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\CartWidget\\CartWidget.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\WishListWidget\\WishListModal\\WishListModal.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\WishListWidget\\WishListWidget.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\CartWidget\\CartModal\\CartModal.js",[],"E:\\ESTUDIOS\\coder\\ecommerce\\src\\components\\NavBarContainer\\NavBar\\NavBar.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":181,"column":14,"nodeType":"148","messageId":"149","endLine":181,"endColumn":24},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":15},{"ruleId":"146","severity":1,"message":"151","line":14,"column":9,"nodeType":"148","messageId":"149","endLine":14,"endColumn":20},{"ruleId":"146","severity":1,"message":"152","line":36,"column":11,"nodeType":"148","messageId":"149","endLine":36,"endColumn":17},{"ruleId":"146","severity":1,"message":"153","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"154","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":8,"column":32,"nodeType":"157","messageId":"158","endLine":8,"endColumn":35},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'totalPrice' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'currentUser' is assigned a value but never used.","'logout' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]